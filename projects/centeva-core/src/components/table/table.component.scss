@import '../../colors.scss';

.bold {
  font-weight: 700;
  font-size: 14px;
}

.icon {
  font-size: 12pt;
  position: relative;
  top: 2px;
}

.sort-icon-selected {
  transition: .3s;
  font-size: 1rem;
  cursor: pointer;
  color: rgb(46, 46, 46);
  margin-left: .3rem;
  &:hover {
    font-size: 1.2rem;
  }
  position: relative;
  top: 2px;
}

.sort-icon {
  transition: .3s;
  cursor: pointer;
  font-size: 1rem;
  color: lightgray;
  margin-left: .3rem;
  &:hover {
    font-size: 1.2rem;
  }
  position: relative;
  top: 2px;
}

.table-wrapper-loading {
  overflow:hidden;
  height: 100%;
}

.table-wrapper {

  position: relative;

  .loading-bar {
    position: absolute;
    top: 125px;
    width: 100%;
  }

  .no-items-to-show {
    padding: 1em;
  }

  .material-table {
    width: 100%;
    table-layout: fixed;

    // Ensure that floating labels aren't cut off at the top, and remove default left/right padding of MDC table th
    ::ng-deep .mat-mdc-header-cell {
      padding: 4px 0 0 0;
    }

    // Ensure that first table header input has left padding
    ::ng-deep .mat-mdc-header-cell:first-of-type {
      padding-left: 16px;
    }

    .column-header-container {
      display: flex;
      flex-direction: row;
      align-items: center;
      padding-bottom: 1.3em;

      .comparison-container {
        position: relative;

      }

      // "Hide" the down arrow on select inputs
      ::ng-deep .mat-mdc-select-arrow {
        color: white;
      }

      .mat-mdc-form-field {
        // Why?
        width: 219px !important;
        flex-grow: 1;
      }
    }

    td {
      word-break: break-all;
      padding: .4rem 1rem .4rem 1rem;
    }

    tr {
      &:nth-child(even) {
        background-color: whitesmoke;
      }
    }

    .clickable-row {
      cursor: pointer;
    }
  }

  .resizer {
    cursor: col-resize;
    float: right;
    margin-right: 10px;
    height: 40px;
    user-select: none;
    z-index: 10;
    background-clip: content-box;
    padding: 0 5px;
    width: 2px;
    background-color: rgba(0, 0, 0, .42);
  }
  // Get multiple suffix icons to line up horizontally
  ::ng-deep .mat-mdc-form-field-icon-suffix {
    display: flex;
    flex-direction: row;
    z-index: 1000; // On top of any overlapping labels
  }
}

.comparison-overlay {
  width: 265px;
  background-color: white;
  border: 1px solid lightgray;
  box-shadow: 0px 0px 4px -2px black;
  padding: 14px;
  display: flex;
  flex-direction: column;
  justify-content: space-between;

  .radio-buttons {
    display: flex;
  }

  .comparison-input {
    border: 2px solid lightgray;
    width: 207px;
    margin-bottom: 10px;
    margin-top: 7px;
    padding: 8px 5px;
    border-radius: 4px;
    &:hover {
      border: 2px solid var($dark);
    }
  }

  .negative-margin {
    margin-top: -5px;
  }

  .comparison-buttons {
    display: flex;
    justify-content: space-between;
    margin: 0 30px;
  }
}

// Fix some Material form field bugs with label max width and icon prefix/suffix
// If Material fixes these can be removed
::ng-deep .mat-mdc-form-field-has-icon-suffix .mdc-floating-label:not(.mdc-floating-label--float-above) {
  padding-right: 48px; // default icon button width
  box-sizing: border-box;
}

::ng-deep .mat-mdc-form-field-has-icon-prefix .mdc-floating-label:not(.mdc-floating-label--float-above) {
  // This is the same formula used to offset the label to uncover the prefix icon
  padding-right: calc(1 * (52px + var(--mat-mdc-form-field-label-offset-x, 0px)));
  box-sizing: border-box;
}
